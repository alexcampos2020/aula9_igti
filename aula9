### CSS

ul,
li {
    list-style-type: none;
}

.clickable {
    cursor: pointer;
}

.deleteButton {
    color: white;
    font-weight: bold;
    background-color: darkred;
    margin-right: 10px;
    border-radius: 50%;
}

=====
### HTML

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aula</title>
    <!-- <link rel="stylesheet" href="./reset.css"> -->
    <link rel="stylesheet" href="./style.css">
</head>
<body>
    <h1>Cadastro de nome</h1>
    <form>
        <label>
            Nome:
            <input
            id="inputName"
            type="text"
            placeholder="Informe um nome aqui..."
        </label>
    </form>
    <h2>Nomes cadastrados até o momento</h2>
    <div id="names"></div>
    <script src="./script.js"></script>
</body>
</html>

====
### JAVA SCRIPT
window.addEventListener('load', start);

var globalNames = ['Um', 'Dois', 'Três', 'Quatro', 'Cinco'];
var inputName = null;
var currentIndex = null;
var isEditin = false;

function start(){
    inputName = document.querySelector('#inputName');
    
    preventFormSubmit();
    activateInput();
    render();

    // console.log('start');
}
// deixando formulário, fazendo com que a página não seja recarregada ao dar ENTER
function preventFormSubmit(){
    function handleFormSubmit(event){
        event.preventDefault();
}

var form = document.querySelector('form');
form.addEventListener('submit', handleFormSubmit);
}

function activateInput() {
    function insertName(newName){
        globalNames.push(newName);
        // console.log(globalNames);
    }

    function updateName(newName){
        // console.log(newName);
        // console.log(index);
        globalNames[currentIndex] = newName;
    }

    function handleTyping(event) {

        var hasText = !!event.target.value && event.target.value.trim() !== '';
        if (!hasText){
            clearInput();
            return;
        }

        if (event.key === 'Enter'){
            // console.log(event.target.value);
            if (isEditin){
                updateName(event.target.value);
            } else {
                insertName(event.target.value);
            }

            render();  
            isEditin = false;
            clearInput();
            // var typeName = event.target.value;
            // globalNames.push(event.target.value);
        }
    }
    inputName.addEventListener('keyup', handleTyping);
    inputName.focus();
}

function render(){
    function createDeleteButton(index) {
        function deleteName() {
            globalNames.splice(index, 1);
            render();
        }

        // function updateName(newName) {

        // }

        var button = document.createElement('button');
        button.classList.add('deleteButton');
        button.textContent = 'x';
        button.addEventListener('click', deleteName);
        return button;
    }

    function createSpan(name, index) {
        function editItem(){
            inputName.value = name;
            inputName.focus();
            isEditin = true;
            currentIndex = index;
        
        }
        var span = document.createElement('span');
        span.classList.add('clickable');
        // span.textContent = name;
        span.textContent = currentName;
        span.addEventListener('click', editItem);

        return span;
    }
    var divNames = document.querySelector('#names');
    divNames.innerHTML = '';
    // divNames.innerHTML =
    // '<ul><li>Nome 1</li><li>Nome 2</li></ul>';
    // criar ul
    // fazer n li's conforme tamanho do globalNames
    var ul = document.createElement('ul');

    for (var i = 0; i < globalNames.length; i++) {
        var currentName = globalNames[i];

        var li = document.createElement('li');
        var button = createDeleteButton(i);
        var span = createSpan(currentName, i);

        li.appendChild(button);
        li.appendChild(span);
        // li.textContent = currentName;
        ul.appendChild(li);

    }

    // ESSE PONTO FOI FEITO PARA TESTES, O RECURSO FICARA DE FORMA DINÂMICA
    // var li1 = document.createElement('li');
    // var li2 = document.createElement('li2');
    // li1.textContent = 'Primeiro';
    // li2.textContent = 'Segundo';
    // ul.appendChild(li1);
    // ul.appendChild(li2);


     // JEITO ERRADO
    // divNames.appendChild('ul');
    //JEITO CERTO
    divNames.appendChild(ul);
    clearInput();
}

    function clearInput(){
        inputName.value = '';
        inputName.focus();
    }
